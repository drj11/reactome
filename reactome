#!/usr/bin/env python3

"""
reactome list name - list ids of entities with name
reactome biopax id - download biopax of entity
reactome url - show the base API URL used

A reactome command line tool.

Some examples:
reactome list Apoptosis
reactome biopax 109581
"""

# see http://reactomews.oicr.on.ca:8080/ReactomeRESTfulAPI/ReactomeRESTFulAPI.html

import sys

import requests

URL="http://reactomews.oicr.on.ca:8080/ReactomeRESTfulAPI/RESTfulWS/"

def main(argv=None):
    if argv is None:
        argv = sys.argv

    g = globals()
    commands = [c for c in g.keys() if c.startswith("command_")]
    commands = [c.replace("command_", "") for c in commands]

    def command_show(arg):
        for cmd in commands:
            print("reactome", cmd)

    arg = argv[1:]
    if len(arg) < 1:
        return command_show(arg)
    command = arg[0]

    if command in commands:
        return g["command_" + command](arg)
    else:
        return command_show(arg)


def command_list(arg):
    name = arg[1]

    post("listByQuery/Pathway", data='name={}'.format(name))

def command_biopax(arg):
    id = arg[1]

    url = "biopaxExporter/Level2/{}".format(id)
    get(url)

def command_front(arg):
    species = arg[1]

    url = "frontPageItems/{}".format(species)
    get(url)

def command_hit(arg):
    genes = ",".join(arg)
    post("queryHitPathways", genes)

def command_url(arg):
    print(URL)

def post(url_path, data):
    response = requests.post(URL + url_path, data,
        headers={'Content-Type': 'text/plain'})

    sys.stdout.buffer.write(response.content)

def get(url_path):
    response = requests.get(URL + url_path,
        headers={'Accept': 'application/json'})

    sys.stdout.buffer.write(response.content)

if __name__ == '__main__':
    main()
